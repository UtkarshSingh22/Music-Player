(()=>{"use strict";const e=[{name:"On & On",artist:"Cartoon x HAVSUN x WAYOUT, ft. Daniel Levi",imageSrc:"/dist/song-images/on&on.jpg",songSrc:"/dist/sample-songs/Cartoon - On & On (ft. Daniel Levi)(Cartoon x HAVSUN x WAYOUT Remix) [NCS Release].mp3",duration:"03:58"},{name:"Mortals",artist:"Warriyo, feat. Laura Brehm",imageSrc:"/dist/song-images/warriyo.jpg",songSrc:"/dist/sample-songs/Warriyo - Mortals (feat. Laura Brehm) [NCS Release].mp3",duration:"03:48"},{name:"Cradles",artist:"Sub Urban",imageSrc:"/dist/song-images/cradles.jpg",songSrc:"/dist/sample-songs/Sub Urban - Cradles [NCS Release].mp3",duration:"03:29"},{name:"Adventures",artist:"William Ekh, feat. Alexa Lusader",imageSrc:"/dist/song-images/adventures.jpg",songSrc:"/dist/sample-songs/William Ekh - Adventures (feat. Alexa Lusader) [NCS Release].mp3",duration:"03:11"},{name:"Set Me Free",artist:"Simbai & Frizzy The Streetz",imageSrc:"/dist/song-images/setmefree.jpg",songSrc:"/dist/sample-songs/Simbai & Frizzy The Streetz - Set Me Free [NCS Release].mp3",duration:"02:49"},{name:"Heroes Tonight",artist:"Janji, ft.Johnning",imageSrc:"/dist/song-images/janji.jpg",songSrc:"/dist/sample-songs/Janji - Heroes Tonight (feat. Johnning) [NCS Release].mp3",duration:"03:28"}],t=(e,t,n)=>{const s=document.createElement("img");s.classList.add("card-img"),s.src=e;const a=document.createElement("div");a.classList.add("music-name"),a.textContent=t;const c=document.createElement("div");c.classList.add("artist-name"),c.textContent=n;const r=document.createElement("div");return r.classList.add("cards"),r.appendChild(s),r.appendChild(a),r.appendChild(c),r},n=t=>{const n=document.querySelector(".main");"songData"==n.lastChild.className&&n.removeChild(n.lastChild),n.appendChild((t=>{const n=document.createElement("div");n.classList="songData";const s=document.createElement("img");s.classList="mainImg",s.setAttribute("src",e[t].imageSrc);const a=document.createElement("div");a.classList="songName",a.textContent=e[t].name;const c=document.createElement("div");return c.classList="artist",c.textContent=e[t].artist,n.appendChild(s),n.appendChild(a),n.appendChild(c),n})(t))},s=t=>{let s=document.querySelector(".audioElement"),a=document.querySelector(".playBtn"),c=document.querySelector(".playBtnImg");const r=document.querySelector(".volume");let i=document.querySelector(".currTime");const d=document.querySelector(".totalTime"),o=document.querySelector(".music-gif");s.setAttribute("src",e[t].songSrc);let l=s.play();void 0!==l&&l.then((()=>{s.play()})).catch((e=>{})),o.setAttribute("src","/dist/icons-and-images/music.gif"),a.addEventListener("click",(()=>{s.paused?(s.play(),c.src="/dist/icons-and-images/pause-svgrepo-com.svg",o.setAttribute("src","/dist/icons-and-images/music.gif")):(s.pause(),c.src="/dist/icons-and-images/play-svgrepo-com.svg",o.setAttribute("src",""))}));const m=document.querySelector(".musicBar");s.addEventListener("timeupdate",(()=>{let e=s.currentTime/s.duration*100;m.value=e;let t=Math.floor(s.currentTime/60),n=Math.floor(s.currentTime%60),a="",c="";t/10==0&&(a="0"),0==Math.floor(n/10)&&(c="0"),i.textContent=a+t+":"+c+n;let r=Math.floor(s.duration/60),o=Math.floor(s.duration%60),l="",u="";r/10==0&&(l="0"),0==Math.floor(o/10)&&(u="0"),0==Number.isNaN(r)?d.textContent=l+r+":"+u+o:d.textContent="00:00"})),m.addEventListener("click",(e=>{s.currentTime=e.offsetX/e.srcElement.clientWidth*s.duration}));const u=document.querySelector(".prevBtn");document.querySelector(".nextBtn").addEventListener("click",(()=>{s.paused&&(c.src="/dist/icons-and-images/pause-svgrepo-com.svg"),t==e.length-1?t=0:t++,n(t),s.setAttribute("src",e[t].songSrc);let a=s.play();void 0!==a&&a.then((()=>{s.play()})).catch((e=>{}))})),u.addEventListener("click",(()=>{s.paused&&(c.src="/dist/icons-and-images/pause-svgrepo-com.svg"),0==t?t=e.length-1:t--,n(t),s.setAttribute("src",e[t].songSrc);let a=s.play();void 0!==a&&a.then((()=>{s.play()})).catch((e=>{}))})),r.addEventListener("click",(e=>{s.volume=e.offsetX/e.srcElement.clientWidth}))},a=()=>{const c=document.querySelector(".main");for(;c.hasChildNodes();)c.removeChild(c.firstChild);const r=(()=>{const e=document.createElement("div");return e.classList="songCards",e})();let i=3;for(;i<6;){const n=e[i].imageSrc,s=e[i].name,a=e[i].artist,c=t(n,s,a);r.appendChild(c),i++}const d=(e=>{const t=document.createElement("img");return t.setAttribute("class","content-img"),t.src="",t})(),o=(()=>{const e=document.createElement("div");return e.classList="lyrics",e})(),l=(()=>{const e=document.createElement("div");return e.classList="mediaPlayer",e.appendChild((()=>{let e=document.createElement("audio");return e.classList="audioElement",e.src="",e})()),e.appendChild((()=>{const e=document.createElement("div");e.classList="songDetail";const t=document.createElement("img"),n=document.createElement("div");let s=document.createElement("div"),a=document.createElement("div");return s.classList="currTime",a.classList="totalTime",t.classList="music-gif",n.classList="duration",n.appendChild(s),n.appendChild(a),t.src="",e.appendChild(t),e.appendChild(n),e})()),e.appendChild((()=>{const e=document.createElement("input");return e.setAttribute("type","range"),e.classList="musicBar",e.value=0,e})()),e.appendChild((()=>{const e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("div"),s=document.createElement("div"),a=document.createElement("input");a.value=100;const c=document.createElement("img"),r=document.createElement("img"),i=document.createElement("img");return c.src="/dist/icons-and-images/previous-svgrepo-com.svg",r.src="/dist/icons-and-images/next-svgrepo-com.svg",i.src="/dist/icons-and-images/pause-svgrepo-com.svg",i.classList.add("playBtnImg","control-img"),r.classList.add("nextBtnImg","control-img"),c.classList.add("prevBtnImg","control-img"),t.classList.add("prevBtn","controlBtn"),s.classList.add("playBtn","controlBtn"),n.classList.add("nextBtn","controlBtn"),t.appendChild(c),s.appendChild(i),n.appendChild(r),a.setAttribute("type","range"),a.classList="volume",e.classList="controls",e.appendChild(t),e.appendChild(s),e.appendChild(n),e.appendChild(a),e})()),e})();c.appendChild(d),c.appendChild(o),c.appendChild(r),c.appendChild(l),document.querySelector(".songCards").addEventListener("click",(t=>{if("cards"==t.target.parentElement.className){const c=t.target.parentElement.children[1].textContent;let r;for(let t=0;t<e.length;t++)e[t].name==c&&(r=t);a(),n(r),s(r)}}))},c=t=>{if("cards"==t.target.parentElement.className){const c=t.target.parentElement.children[1].textContent;let r;for(let t=0;t<e.length;t++)e[t].name==c&&(r=t);a(),n(r),s(r)}},r=()=>{document.querySelector(".music-cards").addEventListener("click",c),(()=>{const e=document.querySelector(".search-bar");e.addEventListener("input",(t=>{console.log(t.target.value),e.value}))})()},i=()=>{const n=document.querySelector(".main");for(;n.hasChildNodes();)n.removeChild(n.firstChild);const s=(()=>{const e=document.createElement("div");return e.classList="music-cards",e})();let a=0;for(;a<3;){const n=e[a].imageSrc,c=e[a].name,r=e[a].artist,i=t(n,c,r);s.appendChild(i),a++}const c=(()=>{const e=document.createElement("div");return e.classList="list-head",e.textContent="Play music",e})(),i=(()=>{const e=document.createElement("div");return e.classList="list-of-songs",e})();i.appendChild(c),i.appendChild(s);const d=(e=>{const t=document.createElement("img");return t.setAttribute("class","content-img"),t.src="",t})(),o=(()=>{const e=document.createElement("div");return e.setAttribute("class","content-data"),e.textContent="Get ready to enjoy the experience!",e})(),l=(()=>{const e=document.createElement("input");return e.setAttribute("type","search"),e.classList="search-bar",e})();n.appendChild(d),n.appendChild(o),n.appendChild(l),n.appendChild(i),r()};(()=>{i();const e=document.querySelector(".home-btn"),t=document.querySelector(".music-list-btn");e.addEventListener("click",i),t.addEventListener("click",a)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,